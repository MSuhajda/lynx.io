[{"author":"Parkzer","email":"adamparkzer@gmail.com","website":"http:\/\/parkzer.com","text":"I dunno what you're talking about in the Spacing section of this article. That's similar to how I code, and not only does it save time, it also makes the code more fluid when I read over it.","date":1294864980},{"author":"Callum Macrae","email":"callum@lynxphp.com","website":"http:\/\/lynxphp.com\/","text":"All in one large block, with no white space? I find it unreadable.\r\n\r\n~Callum","date":1294869900},{"author":"Parkzer","email":"adamparkzer@gmail.com","website":"http:\/\/parkzer.com","text":"No, I still use line breaks and blank lines, I just don't use spaces. Taking your code for example, I would write:\r\n\r\n\t$res=$data=>query(\"SELECT*FROM config WHERE config='time'\");","date":1294881600},{"author":"Callum Macrae","email":"callum@lynxphp.com","website":"http:\/\/lynxphp.com\/","text":"Interesting, to me that would seem odd and difficult to read. I also use too many line returns though \r\n\r\nI guess that as long as it isn\u2019t too bad and it\u2019s consistent, everything is okay.\r\n\r\n~Callum","date":1294894200},{"author":"Rob","email":"stealth4@hotmail.co.uk","website":"http:\/\/lets-game.com","text":"I just agree with Callum about the spacing, i find it awful to read unless its structured clearly for me, one example is that when i open and close my php tages i must have a white space inbetween like so:\r\n\r\n\t<?php\r\n\t   \r\n\t   \/\/ Code here\r\n\t\r\n\t?>\r\n\r\nI then space out any varibles out from any statements\r\n\r\n\t<?php\r\n\t\r\n\t  $username = '';\r\n\t  $password = '';\r\n\t\r\n\t  if($username == 'Rob') {\r\n\t\r\n\t    \/\/ Do something\r\n\t\r\n\t  }\r\n\t\r\n\t?>\r\n\r\n\r\nSure it might take a little longer to structure but when i go back to update or change my code its just so much easier.","date":1296085920},{"author":"Garrett","email":"garrett@liquidphp.net","website":"http:\/\/liquidphp.net","text":"What you tell users when reporting errors can be a problem. It's all fine and good when you're the only user to your website, but let's say you're doing something like:\r\n\r\n\tmysql_connect($blah, $etc, $whatever) OR die(mysql_error());\r\n\r\nWhich I've seen done time and time again. Let's say your SQL server goes down while. Now every person who goes to your site will see an error message displaying your MySQL user name: one of few necessary pieces of information a hacker needs to get into your server. Using mysql_error() anywhere gives out sensitive information, so save that for your internal error reporting only!","date":1297758360},{"author":"Callum Macrae","email":"callum@lynxphp.com","website":"http:\/\/lynxphp.com\/","text":"\tdefine('DEBUG', false);\r\n\r\nI've often seen or used debug constants and variables - they allow an easy way to switch between different types of error reporting :-)\r\n\r\n~Callum","date":1297815000}]
